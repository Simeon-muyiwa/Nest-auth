- name: Create Persistent Volume for each portal
  community.kubernetes.k8s:
    definition: >-
      {{
        lookup('template', 'nestjs-pv.yml',
               template_vars=dict(portalname=item.name, namespace=tenant.namespace))
        | from_yaml
      }}
    state: present
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"
  when: tenant is defined

- name: Debug current item and tenant
  debug:
    msg:
      - "Current portal: {{ item.name }}"
      - "Current tenant: {{ tenant }}"
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"
  when: tenant is defined

- name: Create Persistent Volume Claim for each portal
  community.kubernetes.k8s:
    definition: >-
      {{
        lookup('template', 'nestjs-pvc.yml',
               template_vars=dict(portalname=item.name, namespace=tenant.namespace))
        | from_yaml
      }}
    state: present
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"
  when: tenant is defined

- name: Create nestjs Secret for each portal
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'nestjs-secret-env.yml', template_vars=dict(portalname=item.name, namespace=tenant.namespace, jwt_token_secret=jwt_token_secret, jwt_access_token_ttl=jwt_access_token_ttl, jwt_refresh_token_ttl=jwt_refresh_token_ttl)) | from_yaml }}"
    state: present
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"
    jwt_token_secret: "{{ item.jwt_token_secret | default('your_default_value') }}"
    jwt_access_token_ttl: "{{ item.jwt_access_token_ttl | default(3600) }}"
    jwt_refresh_token_ttl: "{{ item.jwt_refresh_token_ttl | default(86400) }}"
  when: jwt_token_secret != ""

- name: Create nestjs deployments/replicasets and pods for each portal
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'nestjs-deploy.yml', template_vars=dict(portalname=item.name, namespace=tenant.namespace, replicacount=item.replicacount)) | from_yaml }}"
    state: present
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"

- name: Create nestjs services for each portal
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'nestjs-service.yml', template_vars=dict(portalname=item.name, namespace=tenant.namespace)) | from_yaml }}"
    state: present
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"

- name: Create nestjs ingress for each portal
  community.kubernetes.k8s:
    definition: "{{ lookup('template', 'nestjs-ingress.yml', template_vars=dict(namespace=tenant.namespace)) | from_yaml }}"
    state: present
  loop: "{{ mytenants | map(attribute='portals') | list | flatten }}"
  loop_control:
    loop_var: item
  vars:
    tenant: "{{ mytenants | selectattr('portals', 'contains', item) | first }}"
