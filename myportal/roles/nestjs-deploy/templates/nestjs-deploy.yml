apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ portalname }}
  namespace: {{ namespace }}
spec:
  replicas: {{ replicacount }}
  selector:
    matchLabels:
      app: {{ portalname }}
  template:
    metadata:
      labels:
        app: {{ portalname }}
    spec:
      initContainers:
        - name: init-secrets
          image: busybox
          command:
            - sh
            - -c
            - |
              set -e  # Exit on error
              if [ -f /etc/jwt-secrets/jwt-secrets.env ]; then
                cp /etc/jwt-secrets/jwt-secrets.env /root/nestjs/.env.jwt
              else
                echo "Error: /etc/jwt-secrets/jwt-secrets.env not found."
                exit 1
              fi
              if [ -f /etc/postgresql-secret/postgresql-secret.env ]; then
                cp /etc/postgresql-secret/postgresql-secret.env /root/nestjs/.env.postgres
              else
                echo "Error: /etc/postgresql-secret/postgresql-secret.env not found."
                exit 1
              fi
          volumeMounts:
            - name: jwt-secrets
              mountPath: /etc/jwt-secrets
            - name: postgresql-secret
              mountPath: /etc/postgresql-secret
            - name: app-volume
              mountPath: /root/nestjs/init  # Use a separate directory for initialization

      containers:
        - name: {{ portalname }}
          image: ubuntu:latest
          command:
            - /bin/sh
          args:
            - -c
            - |
              set -e  # Exit on error
              tar xzf /root/nestjs/init/nestjs-app-archive.tar.gz -C /root/nestjs  # Adjust extraction path
              cd /root/nestjs
              ansible-playbook playbooks/nestjs-playbook.yml || { echo "Ansible playbook failed"; exit 1; }
          env:
            - name: REDIS_HOST
              value: "redis"
            - name: REDIS_PORT
              value: "6379"
            - name: JWT_TOKEN_AUDIENCE
              value: "{{ portalname }}.default.svc.cluster.local" 
            - name: JWT_TOKEN_ISSUER
              value: "{{ portalname }}.default.svc.cluster.local"
          envFrom:
            - secretRef:
                name: jwt-secrets
              prefix: JWT_
            - secretRef:
                name: postgresql-secret
              prefix: POSTGRES_
          volumeMounts:
            - name: app-volume
              mountPath: /root/nestjs  # Main application directory
            - name: jwt-secrets
              mountPath: /etc/jwt-secrets/.env.jwt
              subPath: .env.jwt
            - name: postgresql-secret
              mountPath: /etc/postgresql-secret/.env.postgres
              subPath: .env.postgres
          resources:
            requests:
              memory: '128Mi'
              cpu: '250m'
            limits:
              memory: '256Mi'
              cpu: '500m'
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 5
            timeoutSeconds: 2
            successThreshold: 1
            failureThreshold: 3

      volumes:
        - name: app-volume
          configMap: 
            name: {{ portalname }}  # Reference the ConfigMap by portalname
        - name: jwt-secrets
          secret:
            secretName: jwt-secrets
        - name: postgresql-secret
          secret:
            secretName: postgresql-secret