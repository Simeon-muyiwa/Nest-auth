---
- name: Clone or update the NestJS repository
  git:
    repo: '{{ repo_path }}'
    dest: '{{ service_path }}'
    version: main
    update: yes
  register: repo_clone

- name: Fail if cloning or updating the repository failed
  fail:
    msg: 'Failed to clone or update the repository.'
  when: repo_clone.failed

- name: Pull latest changes from the main branch
  command: >
    git -C '{{ service_path }}' pull origin main
  register: git_pull
  changed_when: true

- name: Check if pulling changes was successful
  fail:
    msg: 'Failed to pull changes from the repository.'
  when: git_pull.rc != 0

- name: Check for changes in the repository
  command: >
    git -C '{{ service_path }}' status --porcelain
  register: git_status
  changed_when: false
  failed_when: false

- name: Determine if there are changes in the main branch
  set_fact:
    has_changes: "{{ git_status.stdout != '' }}"

- name: Check if myportal folder exists
  ansible.builtin.stat:
    path: /opt/nestjs/myportal
  register: stat

- name: Ensure destination directory exists
  ansible.builtin.file:
    path: /Myk8sAnsible/myportal
    state: directory

- name: Synchronize Myk8sAnsible folder to the correct location
  synchronize:
    mode: push
    src: /opt/nestjs/
    dest: /Myk8sAnsible/myportal/
    delete: yes
    rsync_opts:
      - --compress
      - --delay-updates
  register: sync_result

- name: Check if synchronize was successful
  debug:
    msg: "Synchronize completed successfully: {{ sync_result }}"
  when: sync_result.rc == 0

- name: Report synchronize failure
  debug:
    msg: "Synchronize failed with error: {{ sync_result.stderr }}"
  when: sync_result.rc != 0

# Check if the archive already exists
- name: Check if the archive already exists
  ansible.builtin.stat:
    path: /tmp/nestjs-app-archive.tar.gz
  register: archive_stat

- name: Remove existing archive if it exists
  ansible.builtin.file:
    path: /tmp/nestjs-app-archive.tar.gz
    state: absent
  when: archive_stat.stat.exists and has_changes

- name: Archive NestJS application excluding Myk8sAnsible
  archive:
    path: /opt/nestjs
    exclude_path: /opt/nestjs/myportal
    dest: /tmp/nestjs-app-archive.tar.gz
    format: gz
  when: has_changes

- name: Check if archive was created
  ansible.builtin.stat:
    path: /tmp/nestjs-app-archive.tar.gz
  register: archive_check

- name: Fail if archive creation failed
  fail:
    msg: "The archive was not created."
  when: not archive_check.stat.exists

- name: Encode archive content in base64
  set_fact:
    base64_content: "{{ lookup('pipe', 'base64 /tmp/nestjs-app-archive.tar.gz') }}"
  when: has_changes

- name: Display encoded archive content
  ansible.builtin.debug:
    msg: '{{ base64_content }}'
  when: has_changes