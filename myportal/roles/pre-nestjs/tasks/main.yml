---
- name: Set tenant name and portals data
  set_fact:
    mytenantname: "tenant1" # Set this to your tenant name or a specific identifier
    myportals:
      - { name: "nestjs-auth", replicacount: 1, namespace: portal1 }

# 1. Clone or update the NestJS repository
- name: Clone or update the NestJS repository
  git:
    repo: "{{ repo_path }}"
    dest: "{{ service_path }}"
    version: main
    update: yes
    force: yes
  register: repo_clone
  delegate_to: localhost

# 2. Ensure correct permissions for /nestjs
- name: Ensure /nestjs has correct permissions
  file:
    path: "/nestjs"
    mode: "u=rwx,g=rx,o=rx"
  become: true

# 3. Synchronize MyK8sAnsible folder to /myk8sansible/myportal/
- name: Synchronize MyK8sAnsible folder to /myk8sansible/myportal/
  synchronize:
    src: "{{ service_path }}/myportal/"
    dest: "/myk8sansible/myportal/"
    delete: yes

# 4. Set Docker environment to Minikube's Docker daemon
- name: Set Docker environment to Minikube's Docker daemon
  shell: |
    eval $(minikube -p minikube docker-env)
  environment:
    DOCKER_CLI_EXPERIMENTAL: "enabled"
  become: true

# 5. Create a Dockerfile for the NestJS app
- name: Create a Dockerfile for the NestJS app
  copy:
    dest: "{{ dockerfile_path }}"
    content: |
      # Use Node.js base image
      FROM node:20

      # Set working directory
      WORKDIR /app

      # Copy package.json and package-lock.json
      COPY package*.json ./

      # Install dependencies
      RUN npm install

      # Copy the rest of the application
      COPY . .

      # Expose the application port
      EXPOSE 3000

      # Run the NestJS application
      CMD ["npm", "run", "start:prod"]

# 6. Build Docker image for NestJS app
- name: Build Docker image for NestJS app
  community.docker.docker_image:
    name: "nestjs-auth"
    source: build
    build:
      path: "{{ service_path }}"
    tag: "V1"
    state: present

# 7. Verify Docker image availability in Minikube
- name: Verify Docker image availability in Minikube
  shell: |
    docker images | grep "nestjs-auth"
  register: docker_images
  failed_when: "'nestjs-auth' not in docker_images.stdout"

- name: Set image_tag fact for deployment
  set_fact:
    image_tag: "nestjs-auth:V1"

- name: Print the image tag (for verification)
  debug:
    msg: "The image tag for deployment is: {{ image_tag }}"
# # 10. Deploy the application directly using kubernetes.core.k8s module
# - name: Deploy the application using kubernetes.core.k8s
#   kubernetes.core.k8s:
#     state: present
#     definition: |
#       apiVersion: apps/v1
#       kind: Deployment
#       metadata:
#         name: "{{ item.name }}-deployment"
#         namespace: "{{ item.namespace }}"  # Adjust the namespace as needed
#       spec:
#         replicas: {{ item.replicacount | default(1) }}
#         selector:
#           matchLabels:
#             app: "{{ item.name }}"
#         template:
#           metadata:
#             labels:
#               app: "{{ item.name }}"
#           spec:
#             containers:
#               - name: "{{ item.name }}"
#                 image: "nestjs-auth:V1"
#                 ports:
#                   - containerPort: 3000
#   loop: "{{ myportals }}"
