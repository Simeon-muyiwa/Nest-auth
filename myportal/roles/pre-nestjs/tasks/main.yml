
---
- name: Clone or update the NestJS repository
  git:
    repo: '{{ repo_path }}'
    dest: '{{ service_path }}'
    version: main
    update: yes
  register: repo_clone

- name: Ensure destination directory exists in Minikube env
  ansible.builtin.file:
    path: myk8sansible/myportal  # Adjusted path to reflect your setup
    state: directory

- name: Synchronize MyK8sAnsible folder if it exists
  ansible.builtin.synchronize:
    src: /opt/nestjs/MyK8sAnsible/myportal/  # Ensure this points to the correct source
    dest: myk8sansible/myportal/               # Ensure this points to the correct destination
    delete: yes

- name: Check if the archive already exists
  ansible.builtin.stat:
    path: /tmp/nestjs-app-archive.tar.gz
  register: archive_stat

- name: Remove existing archive if it exists
  ansible.builtin.file:
    path: /tmp/nestjs-app-archive.tar.gz
    state: absent
  when: archive_stat.stat.exists

- name: Archive NestJS application excluding MyK8sAnsible
  ansible.builtin.archive:
    path: /opt/nestjs
    exclude_path: /opt/nestjs/MyK8sAnsible
    dest: /tmp/nestjs-app-archive.tar.gz
    format: gz

- name: Encode archive content in base64
  set_fact:
    base64_content: "{{ lookup('pipe', 'base64 /tmp/nestjs-app-archive.tar.gz') }}"

- name: Create ConfigMap manifest from template
  ansible.builtin.template:
    src: configmap_template.yaml.j2
    dest: /tmp/configmap.yaml
  vars:
    base64_content: '{{ base64_content }}'
    portalname: '{{ portalname }}'
    namespace: '{{ namespace }}'

- name: Display decoded ConfigMap content
  ansible.builtin.debug:
    msg: "{{ base64_content }}"