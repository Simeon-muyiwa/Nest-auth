- name: Create destination directory
  file:
    path: "{{ service_path }}"
    state: directory
  become: true

- name: Clone or update the NestJS repository
  git:
    repo: "{{ repo_path }}"
    dest: "{{ service_path }}"
    version: main
    update: yes
    force: yes
  register: repo_clone
  delegate_to: localhost
  become: true

- name: Check if destination directory exists
  stat:
    path: "{{ service_path }}"
  register: dir_exists
  changed_when: false

- name: Fail if destination directory does not exist
  fail:
    msg: "Destination directory {{ service_path }} does not exist"
  when: not dir_exists.stat.exists

- name: Synchronize MyK8sAnsible folder to myk8sansible/myportal
  synchronize:
    src: "{{ service_path }}/"
    dest: "/myk8sansible/myportal"
    # ensure only myportal folder is synchronize
    delete: yes
  when: repo_clone.changed

- name: Synchronize MyK8sAnsible folder to myk8sansible/myportal
  synchronize:
    src: "{{ service_path }}/" # Ensure to include the trailing slash for proper synchronization
    dest: "/nestjs/" # Change this to your PV mount path
    exclude:
      - "myportal"
    delete: yes
  when: repo_clone.changed
# - name: Wait for Kubernetes job to complete
#   k8s_info:
#     kind: Job
#     name: read-archive-job
#     namespace: your-namespace  # Replace with your actual namespace
#   register: job_info
#   until: job_info.resources | length > 0 and job_info.resources[0].status.succeeded == 1
#   retries: 10
#   delay: 5

