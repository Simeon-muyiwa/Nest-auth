
- name: Generate Service templates
  template:
    src: templates/service_template.j2
    dest: "{{ service_path }}/{{ portal.name }}-service.yaml"
  loop: "{{ mytenants.portals }}"
  loop_control:
    loop_var: portal
  delegate_to: localhost


- name: Deploy Kubernetes Service objects
  community.kubernetes.k8s:
    definition: "{{ lookup('file', service_path + '/' + item.name + '-service.yaml') }}"
    state: present
  loop: "{{ mytenants.portals }}"
  loop_control:
    loop_var: item
  delegate_to: localhost

- name: Generate Deployment templates
  template:
    src: templates/deployment_template.j2
    dest: "{{ deployment_path }}/{{ portal.name }}-deployment.yaml"
  loop: "{{ mytenants.portals }}"
  loop_control:
    loop_var: portal
  delegate_to: localhost

- name: Deploy Kubernetes Deployment for each microservice
  community.kubernetes.k8s:
    definition: "{{ lookup('file', deployment_path + '/' + item.name + '-deployment.yaml') }}"
    state: present
  loop: "{{ mytenants.portals }}"
  loop_control:
    loop_var: item
  delegate_to: localhost

- name: Deploy ConfigMap if needed
  when: portal.has_configmap
  community.kubernetes.k8s:
    src: "{{ configmap_path }}/{{ portal.name }}-configmap.yaml"
    state: present
  loop: "{{ mytenants.portals }}"
  loop_control:
    loop_var: portal
    run_once: true

    




