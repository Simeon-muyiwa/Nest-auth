apiVersion: apps/v1
kind: Deployment
metadata:
  name: { { portalname } }runner
  namespace: { { namespace } }
spec:
  replicas: { { replicacount } }
  selector:
    matchLabels:
      app: { { portalname } }
  template:
    metadata:
      labels:
        app: { { portalname } }
    spec:
      initContainers:
        - name: init-secrets
          image: busybox
          command:
            - sh
            - -c
            - |
              cp /etc/secrets/jwt-secrets.env /root/nestjs/.env.jwt
              cp /etc/secrets/postgresql-secret.env /root/nestjs/.env.postgres
              cp /etc/secrets/redis-secret.env /root/nestjs/.env.redis
          volumeMounts:
            - name: jwt-secrets
              mountPath: /etc/secrets
            - name: postgresql-secret
              mountPath: /etc/secrets
            - name: redis-secret
              mountPath: /etc/secrets
            - name: app-volume
              mountPath: /root/nestjs
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000

      containers:
        - name: { { portalname } }c
          image: ubuntu:latest
          command:
            - /bin/sh
          args:
            - -c
            - |
              echo "${ARCHIVE_CONTENT}" | base64 --decode > /root/nestjs-app-archive.tar.gz && \
              tar xzf /root/nestjs-app-archive.tar.gz -C /root && \
              cd /root/nestjs && \
              ansible-playbook playbooks/nestjs-playbook.yml
          envFrom:
            - secretRef:
                name: jwt-secrets
              prefix: JWT_
            - configMapRef:
                name: postgresql-configmap
            - secretRef:
                name: postgresql-secret
              prefix: POSTGRES_
            - configMapRef:
                name: redis-configmap
            - secretRef:
                name: redis-secret
              prefix: REDIS_
          volumeMounts:
            - name: app-volume
              mountPath: /root
            - name: jwt-secrets
              mountPath: /root/nestjs/.env.jwt
              subPath: .env.jwt
            - name: postgresql-secret
              mountPath: /root/nestjs/.env.postgres
              subPath: .env.postgres
            - name: redis-secret
              mountPath: /root/nestjs/.env.redis
              subPath: .env.redis
          resources:
            requests:
              memory: '128Mi'
              cpu: '250m'
            limits:
              memory: '256Mi'
              cpu: '500m'
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3

      volumes:
        - name: app-volume
          configMap: 
            name: { { portalname } }cm
          emptyDir: {}
        - name: jwt-secrets
          secret:
            secretName: jwt-secrets
        - name: postgresql-secret
          secret:
            secretName: postgresql-secret
        - name: redis-secret
          secret:
            secretName: redis-secret
