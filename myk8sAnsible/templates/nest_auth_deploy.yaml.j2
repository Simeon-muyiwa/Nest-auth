{% from "set_tenant_data.j2" import mytenants %}
{% for tenant in mytenants %}
  {% for portal in tenant.portals %}
    apiVersion: apps/v1
    kind: Deployment
    metadata:
      name: {{ portal.name }}ansible-runner-deployment
      namespace: {{ tenant.namespace }}
    spec:
      replicas: {{ portal.replicacount }}
      selector:
        matchLabels:
          app: {{ portal.name }}-ansible-runner
      template:
        metadata:
          labels:
            app: {{ portal.name }}ansible-runner
        spec:
          containers:
            - name: {{ portal.name }}ansible-runner
              image: alpine/ansible:latest
              command: ["/bin/sh", "-c"]
              args:
                - >
                  set -e  # Exit immediately if a command exits with a non-zero status
                  apk add --no-cache tar && \
                  echo "${ANSIBLE_ARCHIVE_CONTENT}" | base64 --decode > /ansible/ansible-archive.tar.gz && \
                  tar xzf /ansible/ansible-archive.tar.gz -C /ansible && \
                  ansible-playbook /ansible/nestjs-playbook.yml
              env:
                - name: ANSIBLE_ARCHIVE_CONTENT
                  valueFrom:
                    configMapKeyRef:
                      name: ansible-playbook-configmap
                      key: ansible-archive.tar.gz
              volumeMounts:
                - name: ansible-volume
                  mountPath: /ansible
              resources:
                requests:
                  memory: "64Mi"  # Example value, adjust according to your application needs
                  cpu: "100m"     # Example value, adjust according to your application needs
                limits:
                  memory: "128Mi" # Example value, adjust according to your application needs
                  cpu: "200m"     # Example value, adjust according to your application needs
          volumes:
            - name: ansible-volume
              emptyDir: {}
  {% endfor %}
{% endfor %}
